参考文献：
https://www.cnblogs.com/Curryxin/p/15139654.html

解决一个回溯问题，实际上就是一个决策树的遍历过程
主要需要思考三个问题：

・路径：记录我们做出了的选择(走过的决策树上的路径，我们一般都是在最后的叶子节点上去收集结果)；【比如我们选的123,124】;
・选择列表：当前情况下我们可以做出的选择；【比如在第三步我们可以选3.4.5】
・结束条件：也就是到达了决策树的底层叶子节点，选择列表为空了，无法再做出别的选择了。
【比如我们的树选完了123达到题目中的要求3个元素了，就不能够再做选择了】

回溯算法的模板：
result = []   //结果集
def backtrack(路径, 选择列表):
    if 满足结束条件:
        result.add(路径)  //把已经做出的选择添加到结果集；
        return  //一般的回溯函数返回值都是空；

    for 选择 in 选择列表: //其实每个题的不同很大程度上体现在选择列表上，要注意这个列表的更新，
    //比如可能是搜索起点和终点，比如可能是已经达到某个条件，比如可能已经选过了不能再选；
        做选择  //把新的选择添加到路径里；路径.add(选择)
        backtrack(路径, 选择列表) //递归；
        撤销选择  //回溯的过程；路径.remove(选择)